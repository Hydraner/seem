<?php

/**
 * @file
 * Contains hook implementations and functions for the seem module.
 */

/**
 * Implements hook_entity_view_alter().
 *
 * Wraps any entity with the seem render element to make it displaybale.
 */
function seem_entity_view_alter(array &$build, Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display) {
  $main_content = $build;
  $build = array(
    '#' . $entity->getEntityTypeId() => $entity,
    '#entity_type' => $entity->getEntityTypeId(),
    'content' => array(
      '#type' => 'seem',
      '#displayable' => 'entity',
      '#main_content' => $main_content,
      '#entity_type' => $entity->getEntityTypeId(),
      '#bundle' => $display->getTargetBundle(),
      '#view_mode' => $display->getMode()
    )
  );
}

/**
 * Implements hook_entity_view_alter().
 *
 * Add a post_render callback to any form, in order to wrap the rendered form
 * with a layout.
 */
function seem_form_alter(&$form, $form_state) {
  $form['#post_render'][] = 'seem_post_render';
}

/**
 * Implementation of seem_post_render().
 *
 * Wrap the rendered form with the seem render element to make it displaybale.
 *
 * @param $markup
 *    The markup passed by post_render. We use it as main_content.
 * @param $element
 *    The original render array to extract some context.
 * @return string
 *    Returns the rendered layout / new markup.
 */
function seem_post_render($markup, $element) {
  $output = array(
    '#type' => 'seem',
    '#displayable' => 'form',
    '#form_id' => $element['#form_id'],
    '#main_content' => array('#markup' => $markup)
  );
  // @todo: Find a better solution for that.
  return \Drupal::service('renderer')->render($output, FALSE);
}

/**
 * Implements hook_preprocess_HOOK() for views templates.
 *
 * Since template_preprocess_view removes the views title by default, we add
 * a possibility to show it anyways based on the `show_titleÂ´ parameter.
 */
function seem_preprocess_views_view(&$variables) {
  $view = $variables['view'];

  // Render title if requested.
  if (isset($view->element['#show_title'])) {
    $variables['title']['#markup'] = $view->getTitle();
  }
}

/**
 * Implements hook_entity_type_build().
 */
function seem_entity_type_build(array &$entity_types) {
  $debug = 1;
  /** @var $entity_types \Drupal\Core\Entity\EntityTypeInterface[] */
//  $entity_types['seem']
//    ->setFormClass('add', 'Drupal\seem\SeemDisplayAddForm')
//    ->setFormClass('edit', 'Drupal\seem\SeemDisplayEditForm')
//    ->setFormClass('delete', 'Drupal\seem\Form\SeemDisplayDeleteForm')
//    ->setListBuilderClass('Drupal\seem\SeemListBuilder')
//    ->setLinkTemplate('delete-form', '/admin/structure/seem/configure/{seem_display_id}/delete')
//    ->setLinkTemplate('edit-form', '/admin/structure/seem/configure/{seem_display_id}')
//    ->setLinkTemplate('collection', '/admin/structure/seem');
}
